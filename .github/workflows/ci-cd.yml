name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run basic syntax checks
      run: |
        python -m py_compile hardrock_scraper/*.py
        python -m py_compile *.py
        
    - name: Test imports
      run: |
        python -c "from hardrock_scraper import HardRockScraper; print('âœ… Import test passed')"
        python -c "from hardrock_scraper.models import Match, Player, Odds; print('âœ… Models import passed')"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-to-azure:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Install Azure Container Apps extension
      run: |
        az extension add --name containerapp --upgrade
        
    - name: Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name hr-pong-scraper \
          --resource-group pingpong-betting-rg \
          --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          --output table
          
    - name: Verify deployment
      run: |
        echo "ðŸš€ Deployment completed!"
        az containerapp show \
          --name hr-pong-scraper \
          --resource-group pingpong-betting-rg \
          --query "properties.provisioningState" \
          --output tsv